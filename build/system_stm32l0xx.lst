ARM GAS  /tmp/ccIB1O8H.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32l0xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/system_stm32l0xx.c"
  18              		.section	.text.SystemInit,"ax",%progbits
  19              		.align	1
  20              		.global	SystemInit
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	SystemInit:
  26              	.LFB40:
   1:Core/Src/system_stm32l0xx.c **** /**
   2:Core/Src/system_stm32l0xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32l0xx.c ****   * @file    system_stm32l0xx.c
   4:Core/Src/system_stm32l0xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32l0xx.c ****   * @brief   CMSIS Cortex-M0+ Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32l0xx.c ****   *
   7:Core/Src/system_stm32l0xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32l0xx.c ****   *   user application:
   9:Core/Src/system_stm32l0xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32l0xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32l0xx.c ****   *                      the "startup_stm32l0xx.s" file.
  12:Core/Src/system_stm32l0xx.c ****   *
  13:Core/Src/system_stm32l0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32l0xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32l0xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32l0xx.c ****   *
  17:Core/Src/system_stm32l0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32l0xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32l0xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32l0xx.c ****   *
  21:Core/Src/system_stm32l0xx.c ****   *
  22:Core/Src/system_stm32l0xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32l0xx.c ****   * @attention
  24:Core/Src/system_stm32l0xx.c ****   *
  25:Core/Src/system_stm32l0xx.c ****   * Copyright (c) 2016 STMicroelectronics.
  26:Core/Src/system_stm32l0xx.c ****   * All rights reserved.
  27:Core/Src/system_stm32l0xx.c ****   *
  28:Core/Src/system_stm32l0xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  29:Core/Src/system_stm32l0xx.c ****   * in the root directory of this software component.
  30:Core/Src/system_stm32l0xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  31:Core/Src/system_stm32l0xx.c ****   *
  32:Core/Src/system_stm32l0xx.c ****   ******************************************************************************
ARM GAS  /tmp/ccIB1O8H.s 			page 2


  33:Core/Src/system_stm32l0xx.c ****   */
  34:Core/Src/system_stm32l0xx.c **** 
  35:Core/Src/system_stm32l0xx.c **** /** @addtogroup CMSIS
  36:Core/Src/system_stm32l0xx.c ****   * @{
  37:Core/Src/system_stm32l0xx.c ****   */
  38:Core/Src/system_stm32l0xx.c **** 
  39:Core/Src/system_stm32l0xx.c **** /** @addtogroup stm32l0xx_system
  40:Core/Src/system_stm32l0xx.c ****   * @{
  41:Core/Src/system_stm32l0xx.c ****   */
  42:Core/Src/system_stm32l0xx.c **** 
  43:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Includes
  44:Core/Src/system_stm32l0xx.c ****   * @{
  45:Core/Src/system_stm32l0xx.c ****   */
  46:Core/Src/system_stm32l0xx.c **** 
  47:Core/Src/system_stm32l0xx.c **** #include "stm32l0xx.h"
  48:Core/Src/system_stm32l0xx.c **** 
  49:Core/Src/system_stm32l0xx.c **** #if !defined  (HSE_VALUE)
  50:Core/Src/system_stm32l0xx.c ****   #define HSE_VALUE    ((uint32_t)8000000U) /*!< Value of the External oscillator in Hz */
  51:Core/Src/system_stm32l0xx.c **** #endif /* HSE_VALUE */
  52:Core/Src/system_stm32l0xx.c **** 
  53:Core/Src/system_stm32l0xx.c **** #if !defined  (MSI_VALUE)
  54:Core/Src/system_stm32l0xx.c ****   #define MSI_VALUE    ((uint32_t)2097152U) /*!< Value of the Internal oscillator in Hz*/
  55:Core/Src/system_stm32l0xx.c **** #endif /* MSI_VALUE */
  56:Core/Src/system_stm32l0xx.c **** 
  57:Core/Src/system_stm32l0xx.c **** #if !defined  (HSI_VALUE)
  58:Core/Src/system_stm32l0xx.c ****   #define HSI_VALUE    ((uint32_t)16000000U) /*!< Value of the Internal oscillator in Hz*/
  59:Core/Src/system_stm32l0xx.c **** #endif /* HSI_VALUE */
  60:Core/Src/system_stm32l0xx.c **** 
  61:Core/Src/system_stm32l0xx.c **** 
  62:Core/Src/system_stm32l0xx.c **** /**
  63:Core/Src/system_stm32l0xx.c ****   * @}
  64:Core/Src/system_stm32l0xx.c ****   */
  65:Core/Src/system_stm32l0xx.c **** 
  66:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_TypesDefinitions
  67:Core/Src/system_stm32l0xx.c ****   * @{
  68:Core/Src/system_stm32l0xx.c ****   */
  69:Core/Src/system_stm32l0xx.c **** 
  70:Core/Src/system_stm32l0xx.c **** /**
  71:Core/Src/system_stm32l0xx.c ****   * @}
  72:Core/Src/system_stm32l0xx.c ****   */
  73:Core/Src/system_stm32l0xx.c **** 
  74:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Defines
  75:Core/Src/system_stm32l0xx.c ****   * @{
  76:Core/Src/system_stm32l0xx.c ****   */
  77:Core/Src/system_stm32l0xx.c **** /************************* Miscellaneous Configuration ************************/
  78:Core/Src/system_stm32l0xx.c **** 
  79:Core/Src/system_stm32l0xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  80:Core/Src/system_stm32l0xx.c ****          configuration. */
  81:Core/Src/system_stm32l0xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  82:Core/Src/system_stm32l0xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
  83:Core/Src/system_stm32l0xx.c ****      remap of boot address selected */
  84:Core/Src/system_stm32l0xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  85:Core/Src/system_stm32l0xx.c **** 
  86:Core/Src/system_stm32l0xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  87:Core/Src/system_stm32l0xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  88:Core/Src/system_stm32l0xx.c ****      in Sram else user remap will be done in Flash. */
  89:Core/Src/system_stm32l0xx.c **** /* #define VECT_TAB_SRAM */
ARM GAS  /tmp/ccIB1O8H.s 			page 3


  90:Core/Src/system_stm32l0xx.c **** #if defined(VECT_TAB_SRAM)
  91:Core/Src/system_stm32l0xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM_BASE       /*!< Vector Table base address field.
  92:Core/Src/system_stm32l0xx.c ****                                                      This value must be a multiple of 0x200. */
  93:Core/Src/system_stm32l0xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
  94:Core/Src/system_stm32l0xx.c ****                                                      This value must be a multiple of 0x200. */
  95:Core/Src/system_stm32l0xx.c **** #else
  96:Core/Src/system_stm32l0xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
  97:Core/Src/system_stm32l0xx.c ****                                                      This value must be a multiple of 0x200. */
  98:Core/Src/system_stm32l0xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
  99:Core/Src/system_stm32l0xx.c ****                                                      This value must be a multiple of 0x200. */
 100:Core/Src/system_stm32l0xx.c **** #endif /* VECT_TAB_SRAM */
 101:Core/Src/system_stm32l0xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 102:Core/Src/system_stm32l0xx.c **** 
 103:Core/Src/system_stm32l0xx.c **** /******************************************************************************/
 104:Core/Src/system_stm32l0xx.c **** /**
 105:Core/Src/system_stm32l0xx.c ****   * @}
 106:Core/Src/system_stm32l0xx.c ****   */
 107:Core/Src/system_stm32l0xx.c **** 
 108:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Macros
 109:Core/Src/system_stm32l0xx.c ****   * @{
 110:Core/Src/system_stm32l0xx.c ****   */
 111:Core/Src/system_stm32l0xx.c **** 
 112:Core/Src/system_stm32l0xx.c **** /**
 113:Core/Src/system_stm32l0xx.c ****   * @}
 114:Core/Src/system_stm32l0xx.c ****   */
 115:Core/Src/system_stm32l0xx.c **** 
 116:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Variables
 117:Core/Src/system_stm32l0xx.c ****   * @{
 118:Core/Src/system_stm32l0xx.c ****   */
 119:Core/Src/system_stm32l0xx.c ****   /* This variable is updated in three ways:
 120:Core/Src/system_stm32l0xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 121:Core/Src/system_stm32l0xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 122:Core/Src/system_stm32l0xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 123:Core/Src/system_stm32l0xx.c ****          Note: If you use this function to configure the system clock; then there
 124:Core/Src/system_stm32l0xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 125:Core/Src/system_stm32l0xx.c ****                variable is updated automatically.
 126:Core/Src/system_stm32l0xx.c ****   */
 127:Core/Src/system_stm32l0xx.c ****   uint32_t SystemCoreClock = 2097152U; /* 32.768 kHz * 2^6 */
 128:Core/Src/system_stm32l0xx.c ****   const uint8_t AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9U
 129:Core/Src/system_stm32l0xx.c ****   const uint8_t APBPrescTable[8] = {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 130:Core/Src/system_stm32l0xx.c ****   const uint8_t PLLMulTable[9] = {3U, 4U, 6U, 8U, 12U, 16U, 24U, 32U, 48U};
 131:Core/Src/system_stm32l0xx.c **** 
 132:Core/Src/system_stm32l0xx.c **** /**
 133:Core/Src/system_stm32l0xx.c ****   * @}
 134:Core/Src/system_stm32l0xx.c ****   */
 135:Core/Src/system_stm32l0xx.c **** 
 136:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_FunctionPrototypes
 137:Core/Src/system_stm32l0xx.c ****   * @{
 138:Core/Src/system_stm32l0xx.c ****   */
 139:Core/Src/system_stm32l0xx.c **** 
 140:Core/Src/system_stm32l0xx.c **** /**
 141:Core/Src/system_stm32l0xx.c ****   * @}
 142:Core/Src/system_stm32l0xx.c ****   */
 143:Core/Src/system_stm32l0xx.c **** 
 144:Core/Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Functions
 145:Core/Src/system_stm32l0xx.c ****   * @{
 146:Core/Src/system_stm32l0xx.c ****   */
ARM GAS  /tmp/ccIB1O8H.s 			page 4


 147:Core/Src/system_stm32l0xx.c **** 
 148:Core/Src/system_stm32l0xx.c **** /**
 149:Core/Src/system_stm32l0xx.c ****   * @brief  Setup the microcontroller system.
 150:Core/Src/system_stm32l0xx.c ****   * @param  None
 151:Core/Src/system_stm32l0xx.c ****   * @retval None
 152:Core/Src/system_stm32l0xx.c ****   */
 153:Core/Src/system_stm32l0xx.c **** void SystemInit (void)
 154:Core/Src/system_stm32l0xx.c **** {
  27              		.loc 1 154 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 155:Core/Src/system_stm32l0xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 156:Core/Src/system_stm32l0xx.c **** #if defined (USER_VECT_TAB_ADDRESS)
 157:Core/Src/system_stm32l0xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM 
 158:Core/Src/system_stm32l0xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 159:Core/Src/system_stm32l0xx.c **** }
  32              		.loc 1 159 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE40:
  38              		.global	__aeabi_uidiv
  39              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  40              		.align	1
  41              		.global	SystemCoreClockUpdate
  42              		.syntax unified
  43              		.code	16
  44              		.thumb_func
  46              	SystemCoreClockUpdate:
  47              	.LFB41:
 160:Core/Src/system_stm32l0xx.c **** 
 161:Core/Src/system_stm32l0xx.c **** /**
 162:Core/Src/system_stm32l0xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 163:Core/Src/system_stm32l0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 164:Core/Src/system_stm32l0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 165:Core/Src/system_stm32l0xx.c ****   *         other parameters.
 166:Core/Src/system_stm32l0xx.c ****   *
 167:Core/Src/system_stm32l0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 168:Core/Src/system_stm32l0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 169:Core/Src/system_stm32l0xx.c ****   *         based on this variable will be incorrect.
 170:Core/Src/system_stm32l0xx.c ****   *
 171:Core/Src/system_stm32l0xx.c ****   * @note   - The system frequency computed by this function is not the real
 172:Core/Src/system_stm32l0xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 173:Core/Src/system_stm32l0xx.c ****   *           constant and the selected clock source:
 174:Core/Src/system_stm32l0xx.c ****   *
 175:Core/Src/system_stm32l0xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI
 176:Core/Src/system_stm32l0xx.c ****   *             value as defined by the MSI range.
 177:Core/Src/system_stm32l0xx.c ****   *
 178:Core/Src/system_stm32l0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 179:Core/Src/system_stm32l0xx.c ****   *
 180:Core/Src/system_stm32l0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 181:Core/Src/system_stm32l0xx.c ****   *
 182:Core/Src/system_stm32l0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 183:Core/Src/system_stm32l0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 184:Core/Src/system_stm32l0xx.c ****   *
ARM GAS  /tmp/ccIB1O8H.s 			page 5


 185:Core/Src/system_stm32l0xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32l0xx_hal.h file (default value
 186:Core/Src/system_stm32l0xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 187:Core/Src/system_stm32l0xx.c ****   *             in voltage and temperature.
 188:Core/Src/system_stm32l0xx.c ****   *
 189:Core/Src/system_stm32l0xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32l0xx_hal.h file (default value
 190:Core/Src/system_stm32l0xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 191:Core/Src/system_stm32l0xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 192:Core/Src/system_stm32l0xx.c ****   *              have wrong result.
 193:Core/Src/system_stm32l0xx.c ****   *
 194:Core/Src/system_stm32l0xx.c ****   *         - The result of this function could be not correct when using fractional
 195:Core/Src/system_stm32l0xx.c ****   *           value for HSE crystal.
 196:Core/Src/system_stm32l0xx.c ****   * @param  None
 197:Core/Src/system_stm32l0xx.c ****   * @retval None
 198:Core/Src/system_stm32l0xx.c ****   */
 199:Core/Src/system_stm32l0xx.c **** void SystemCoreClockUpdate (void)
 200:Core/Src/system_stm32l0xx.c **** {
  48              		.loc 1 200 1 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52 0000 10B5     		push	{r4, lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 4, -8
  56              		.cfi_offset 14, -4
 201:Core/Src/system_stm32l0xx.c ****   uint32_t tmp = 0U, pllmul = 0U, plldiv = 0U, pllsource = 0U, msirange = 0U;
  57              		.loc 1 201 3 view .LVU3
  58              	.LVL0:
 202:Core/Src/system_stm32l0xx.c **** 
 203:Core/Src/system_stm32l0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 204:Core/Src/system_stm32l0xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
  59              		.loc 1 204 3 view .LVU4
  60              		.loc 1 204 12 is_stmt 0 view .LVU5
  61 0002 344B     		ldr	r3, .L10
  62 0004 DA68     		ldr	r2, [r3, #12]
  63              		.loc 1 204 7 view .LVU6
  64 0006 0C23     		movs	r3, #12
  65 0008 1340     		ands	r3, r2
  66              	.LVL1:
 205:Core/Src/system_stm32l0xx.c **** 
 206:Core/Src/system_stm32l0xx.c ****   switch (tmp)
  67              		.loc 1 206 3 is_stmt 1 view .LVU7
  68 000a 042B     		cmp	r3, #4
  69 000c 1BD0     		beq	.L3
  70 000e 082B     		cmp	r3, #8
  71 0010 25D0     		beq	.L4
  72 0012 002B     		cmp	r3, #0
  73 0014 27D1     		bne	.L5
 207:Core/Src/system_stm32l0xx.c ****   {
 208:Core/Src/system_stm32l0xx.c ****     case 0x00U:  /* MSI used as system clock */
 209:Core/Src/system_stm32l0xx.c ****       msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> RCC_ICSCR_MSIRANGE_Pos;
  74              		.loc 1 209 7 view .LVU8
  75              		.loc 1 209 22 is_stmt 0 view .LVU9
  76 0016 2F4B     		ldr	r3, .L10
  77              	.LVL2:
  78              		.loc 1 209 22 view .LVU10
  79 0018 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/ccIB1O8H.s 			page 6


  80              	.LVL3:
  81              		.loc 1 209 52 view .LVU11
  82 001a 520B     		lsrs	r2, r2, #13
  83              		.loc 1 209 16 view .LVU12
  84 001c 0723     		movs	r3, #7
  85 001e 1340     		ands	r3, r2
  86              	.LVL4:
 210:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
  87              		.loc 1 210 7 is_stmt 1 view .LVU13
  88              		.loc 1 210 52 is_stmt 0 view .LVU14
  89 0020 0133     		adds	r3, r3, #1
  90              	.LVL5:
  91              		.loc 1 210 33 view .LVU15
  92 0022 8022     		movs	r2, #128
  93 0024 1202     		lsls	r2, r2, #8
  94 0026 9A40     		lsls	r2, r2, r3
  95 0028 1300     		movs	r3, r2
  96              	.LVL6:
  97              		.loc 1 210 23 view .LVU16
  98 002a 2B4A     		ldr	r2, .L10+4
  99 002c 1360     		str	r3, [r2]
 211:Core/Src/system_stm32l0xx.c ****       break;
 100              		.loc 1 211 7 is_stmt 1 view .LVU17
 101              	.LVL7:
 102              	.L6:
 212:Core/Src/system_stm32l0xx.c ****     case 0x04U:  /* HSI used as system clock */
 213:Core/Src/system_stm32l0xx.c ****       if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 214:Core/Src/system_stm32l0xx.c ****       {
 215:Core/Src/system_stm32l0xx.c ****         SystemCoreClock = HSI_VALUE / 4U;
 216:Core/Src/system_stm32l0xx.c ****       }
 217:Core/Src/system_stm32l0xx.c ****       else
 218:Core/Src/system_stm32l0xx.c ****       {
 219:Core/Src/system_stm32l0xx.c ****         SystemCoreClock = HSI_VALUE;
 220:Core/Src/system_stm32l0xx.c ****       }
 221:Core/Src/system_stm32l0xx.c ****       break;
 222:Core/Src/system_stm32l0xx.c ****     case 0x08U:  /* HSE used as system clock */
 223:Core/Src/system_stm32l0xx.c ****       SystemCoreClock = HSE_VALUE;
 224:Core/Src/system_stm32l0xx.c ****       break;
 225:Core/Src/system_stm32l0xx.c ****     default:  /* PLL used as system clock */
 226:Core/Src/system_stm32l0xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 227:Core/Src/system_stm32l0xx.c ****       pllmul = RCC->CFGR & RCC_CFGR_PLLMUL;
 228:Core/Src/system_stm32l0xx.c ****       plldiv = RCC->CFGR & RCC_CFGR_PLLDIV;
 229:Core/Src/system_stm32l0xx.c ****       pllmul = PLLMulTable[(pllmul >> RCC_CFGR_PLLMUL_Pos)];
 230:Core/Src/system_stm32l0xx.c ****       plldiv = (plldiv >> RCC_CFGR_PLLDIV_Pos) + 1U;
 231:Core/Src/system_stm32l0xx.c **** 
 232:Core/Src/system_stm32l0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 233:Core/Src/system_stm32l0xx.c **** 
 234:Core/Src/system_stm32l0xx.c ****       if (pllsource == 0x00U)
 235:Core/Src/system_stm32l0xx.c ****       {
 236:Core/Src/system_stm32l0xx.c ****         /* HSI oscillator clock selected as PLL clock entry */
 237:Core/Src/system_stm32l0xx.c ****         if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 238:Core/Src/system_stm32l0xx.c ****         {
 239:Core/Src/system_stm32l0xx.c ****           SystemCoreClock = (((HSI_VALUE / 4U) * pllmul) / plldiv);
 240:Core/Src/system_stm32l0xx.c ****         }
 241:Core/Src/system_stm32l0xx.c ****         else
 242:Core/Src/system_stm32l0xx.c ****         {
 243:Core/Src/system_stm32l0xx.c ****           SystemCoreClock = (((HSI_VALUE) * pllmul) / plldiv);
ARM GAS  /tmp/ccIB1O8H.s 			page 7


 244:Core/Src/system_stm32l0xx.c ****         }
 245:Core/Src/system_stm32l0xx.c ****       }
 246:Core/Src/system_stm32l0xx.c ****       else
 247:Core/Src/system_stm32l0xx.c ****       {
 248:Core/Src/system_stm32l0xx.c ****         /* HSE selected as PLL clock entry */
 249:Core/Src/system_stm32l0xx.c ****         SystemCoreClock = (((HSE_VALUE) * pllmul) / plldiv);
 250:Core/Src/system_stm32l0xx.c ****       }
 251:Core/Src/system_stm32l0xx.c ****       break;
 252:Core/Src/system_stm32l0xx.c ****   }
 253:Core/Src/system_stm32l0xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 254:Core/Src/system_stm32l0xx.c ****   /* Get HCLK prescaler */
 255:Core/Src/system_stm32l0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 103              		.loc 1 255 3 view .LVU18
 104              		.loc 1 255 28 is_stmt 0 view .LVU19
 105 002e 294B     		ldr	r3, .L10
 106 0030 DA68     		ldr	r2, [r3, #12]
 107              		.loc 1 255 52 view .LVU20
 108 0032 1209     		lsrs	r2, r2, #4
 109 0034 0F23     		movs	r3, #15
 110 0036 1340     		ands	r3, r2
 111              		.loc 1 255 22 view .LVU21
 112 0038 284A     		ldr	r2, .L10+8
 113 003a D15C     		ldrb	r1, [r2, r3]
 114              	.LVL8:
 256:Core/Src/system_stm32l0xx.c ****   /* HCLK clock frequency */
 257:Core/Src/system_stm32l0xx.c ****   SystemCoreClock >>= tmp;
 115              		.loc 1 257 3 is_stmt 1 view .LVU22
 116              		.loc 1 257 19 is_stmt 0 view .LVU23
 117 003c 264A     		ldr	r2, .L10+4
 118 003e 1368     		ldr	r3, [r2]
 119 0040 CB40     		lsrs	r3, r3, r1
 120 0042 1360     		str	r3, [r2]
 258:Core/Src/system_stm32l0xx.c **** }
 121              		.loc 1 258 1 view .LVU24
 122              		@ sp needed
 123 0044 10BD     		pop	{r4, pc}
 124              	.LVL9:
 125              	.L3:
 213:Core/Src/system_stm32l0xx.c ****       {
 126              		.loc 1 213 7 is_stmt 1 view .LVU25
 213:Core/Src/system_stm32l0xx.c ****       {
 127              		.loc 1 213 15 is_stmt 0 view .LVU26
 128 0046 234B     		ldr	r3, .L10
 129              	.LVL10:
 213:Core/Src/system_stm32l0xx.c ****       {
 130              		.loc 1 213 15 view .LVU27
 131 0048 1B68     		ldr	r3, [r3]
 213:Core/Src/system_stm32l0xx.c ****       {
 132              		.loc 1 213 10 view .LVU28
 133 004a DB06     		lsls	r3, r3, #27
 134 004c 03D5     		bpl	.L7
 215:Core/Src/system_stm32l0xx.c ****       }
 135              		.loc 1 215 9 is_stmt 1 view .LVU29
 215:Core/Src/system_stm32l0xx.c ****       }
 136              		.loc 1 215 25 is_stmt 0 view .LVU30
 137 004e 224B     		ldr	r3, .L10+4
 138 0050 234A     		ldr	r2, .L10+12
ARM GAS  /tmp/ccIB1O8H.s 			page 8


 139              	.LVL11:
 215:Core/Src/system_stm32l0xx.c ****       }
 140              		.loc 1 215 25 view .LVU31
 141 0052 1A60     		str	r2, [r3]
 142 0054 EBE7     		b	.L6
 143              	.LVL12:
 144              	.L7:
 219:Core/Src/system_stm32l0xx.c ****       }
 145              		.loc 1 219 9 is_stmt 1 view .LVU32
 219:Core/Src/system_stm32l0xx.c ****       }
 146              		.loc 1 219 25 is_stmt 0 view .LVU33
 147 0056 204B     		ldr	r3, .L10+4
 148 0058 224A     		ldr	r2, .L10+16
 149              	.LVL13:
 219:Core/Src/system_stm32l0xx.c ****       }
 150              		.loc 1 219 25 view .LVU34
 151 005a 1A60     		str	r2, [r3]
 152 005c E7E7     		b	.L6
 153              	.LVL14:
 154              	.L4:
 223:Core/Src/system_stm32l0xx.c ****       break;
 155              		.loc 1 223 7 is_stmt 1 view .LVU35
 223:Core/Src/system_stm32l0xx.c ****       break;
 156              		.loc 1 223 23 is_stmt 0 view .LVU36
 157 005e 1E4B     		ldr	r3, .L10+4
 158              	.LVL15:
 223:Core/Src/system_stm32l0xx.c ****       break;
 159              		.loc 1 223 23 view .LVU37
 160 0060 214A     		ldr	r2, .L10+20
 161              	.LVL16:
 223:Core/Src/system_stm32l0xx.c ****       break;
 162              		.loc 1 223 23 view .LVU38
 163 0062 1A60     		str	r2, [r3]
 224:Core/Src/system_stm32l0xx.c ****     default:  /* PLL used as system clock */
 164              		.loc 1 224 7 is_stmt 1 view .LVU39
 165 0064 E3E7     		b	.L6
 166              	.LVL17:
 167              	.L5:
 227:Core/Src/system_stm32l0xx.c ****       plldiv = RCC->CFGR & RCC_CFGR_PLLDIV;
 168              		.loc 1 227 7 view .LVU40
 227:Core/Src/system_stm32l0xx.c ****       plldiv = RCC->CFGR & RCC_CFGR_PLLDIV;
 169              		.loc 1 227 19 is_stmt 0 view .LVU41
 170 0066 1B4B     		ldr	r3, .L10
 171              	.LVL18:
 227:Core/Src/system_stm32l0xx.c ****       plldiv = RCC->CFGR & RCC_CFGR_PLLDIV;
 172              		.loc 1 227 19 view .LVU42
 173 0068 D868     		ldr	r0, [r3, #12]
 174              	.LVL19:
 228:Core/Src/system_stm32l0xx.c ****       pllmul = PLLMulTable[(pllmul >> RCC_CFGR_PLLMUL_Pos)];
 175              		.loc 1 228 7 is_stmt 1 view .LVU43
 228:Core/Src/system_stm32l0xx.c ****       pllmul = PLLMulTable[(pllmul >> RCC_CFGR_PLLMUL_Pos)];
 176              		.loc 1 228 19 is_stmt 0 view .LVU44
 177 006a DA68     		ldr	r2, [r3, #12]
 178              	.LVL20:
 229:Core/Src/system_stm32l0xx.c ****       plldiv = (plldiv >> RCC_CFGR_PLLDIV_Pos) + 1U;
 179              		.loc 1 229 7 is_stmt 1 view .LVU45
 229:Core/Src/system_stm32l0xx.c ****       plldiv = (plldiv >> RCC_CFGR_PLLDIV_Pos) + 1U;
ARM GAS  /tmp/ccIB1O8H.s 			page 9


 180              		.loc 1 229 36 is_stmt 0 view .LVU46
 181 006c 800C     		lsrs	r0, r0, #18
 182              	.LVL21:
 229:Core/Src/system_stm32l0xx.c ****       plldiv = (plldiv >> RCC_CFGR_PLLDIV_Pos) + 1U;
 183              		.loc 1 229 36 view .LVU47
 184 006e 0F21     		movs	r1, #15
 185 0070 0140     		ands	r1, r0
 229:Core/Src/system_stm32l0xx.c ****       plldiv = (plldiv >> RCC_CFGR_PLLDIV_Pos) + 1U;
 186              		.loc 1 229 27 view .LVU48
 187 0072 1E48     		ldr	r0, .L10+24
 188 0074 445C     		ldrb	r4, [r0, r1]
 189              	.LVL22:
 230:Core/Src/system_stm32l0xx.c **** 
 190              		.loc 1 230 7 is_stmt 1 view .LVU49
 230:Core/Src/system_stm32l0xx.c **** 
 191              		.loc 1 230 24 is_stmt 0 view .LVU50
 192 0076 920D     		lsrs	r2, r2, #22
 193              	.LVL23:
 230:Core/Src/system_stm32l0xx.c **** 
 194              		.loc 1 230 24 view .LVU51
 195 0078 0321     		movs	r1, #3
 196 007a 1140     		ands	r1, r2
 230:Core/Src/system_stm32l0xx.c **** 
 197              		.loc 1 230 14 view .LVU52
 198 007c 0131     		adds	r1, r1, #1
 199              	.LVL24:
 232:Core/Src/system_stm32l0xx.c **** 
 200              		.loc 1 232 7 is_stmt 1 view .LVU53
 232:Core/Src/system_stm32l0xx.c **** 
 201              		.loc 1 232 22 is_stmt 0 view .LVU54
 202 007e DB68     		ldr	r3, [r3, #12]
 203              	.LVL25:
 234:Core/Src/system_stm32l0xx.c ****       {
 204              		.loc 1 234 7 is_stmt 1 view .LVU55
 234:Core/Src/system_stm32l0xx.c ****       {
 205              		.loc 1 234 10 is_stmt 0 view .LVU56
 206 0080 DB03     		lsls	r3, r3, #15
 207 0082 1BD4     		bmi	.L8
 208              	.LVL26:
 237:Core/Src/system_stm32l0xx.c ****         {
 209              		.loc 1 237 9 is_stmt 1 view .LVU57
 237:Core/Src/system_stm32l0xx.c ****         {
 210              		.loc 1 237 17 is_stmt 0 view .LVU58
 211 0084 134B     		ldr	r3, .L10
 212 0086 1B68     		ldr	r3, [r3]
 237:Core/Src/system_stm32l0xx.c ****         {
 213              		.loc 1 237 12 view .LVU59
 214 0088 DB06     		lsls	r3, r3, #27
 215 008a 0BD5     		bpl	.L9
 239:Core/Src/system_stm32l0xx.c ****         }
 216              		.loc 1 239 11 is_stmt 1 view .LVU60
 239:Core/Src/system_stm32l0xx.c ****         }
 217              		.loc 1 239 48 is_stmt 0 view .LVU61
 218 008c 6301     		lsls	r3, r4, #5
 219 008e 1B1B     		subs	r3, r3, r4
 220 0090 9801     		lsls	r0, r3, #6
 221 0092 C01A     		subs	r0, r0, r3
ARM GAS  /tmp/ccIB1O8H.s 			page 10


 222 0094 C000     		lsls	r0, r0, #3
 223 0096 0019     		adds	r0, r0, r4
 224 0098 0002     		lsls	r0, r0, #8
 239:Core/Src/system_stm32l0xx.c ****         }
 225              		.loc 1 239 58 view .LVU62
 226 009a FFF7FEFF 		bl	__aeabi_uidiv
 227              	.LVL27:
 239:Core/Src/system_stm32l0xx.c ****         }
 228              		.loc 1 239 27 view .LVU63
 229 009e 0E4B     		ldr	r3, .L10+4
 230 00a0 1860     		str	r0, [r3]
 231 00a2 C4E7     		b	.L6
 232              	.LVL28:
 233              	.L9:
 243:Core/Src/system_stm32l0xx.c ****         }
 234              		.loc 1 243 11 is_stmt 1 view .LVU64
 243:Core/Src/system_stm32l0xx.c ****         }
 235              		.loc 1 243 43 is_stmt 0 view .LVU65
 236 00a4 6301     		lsls	r3, r4, #5
 237 00a6 1B1B     		subs	r3, r3, r4
 238 00a8 9801     		lsls	r0, r3, #6
 239 00aa C01A     		subs	r0, r0, r3
 240 00ac C000     		lsls	r0, r0, #3
 241 00ae 0019     		adds	r0, r0, r4
 242 00b0 8002     		lsls	r0, r0, #10
 243:Core/Src/system_stm32l0xx.c ****         }
 243              		.loc 1 243 53 view .LVU66
 244 00b2 FFF7FEFF 		bl	__aeabi_uidiv
 245              	.LVL29:
 243:Core/Src/system_stm32l0xx.c ****         }
 246              		.loc 1 243 27 view .LVU67
 247 00b6 084B     		ldr	r3, .L10+4
 248 00b8 1860     		str	r0, [r3]
 249 00ba B8E7     		b	.L6
 250              	.LVL30:
 251              	.L8:
 249:Core/Src/system_stm32l0xx.c ****       }
 252              		.loc 1 249 9 is_stmt 1 view .LVU68
 249:Core/Src/system_stm32l0xx.c ****       }
 253              		.loc 1 249 41 is_stmt 0 view .LVU69
 254 00bc 6301     		lsls	r3, r4, #5
 255 00be 1B1B     		subs	r3, r3, r4
 256 00c0 9801     		lsls	r0, r3, #6
 257 00c2 C01A     		subs	r0, r0, r3
 258 00c4 C000     		lsls	r0, r0, #3
 259 00c6 0019     		adds	r0, r0, r4
 260 00c8 4002     		lsls	r0, r0, #9
 249:Core/Src/system_stm32l0xx.c ****       }
 261              		.loc 1 249 51 view .LVU70
 262 00ca FFF7FEFF 		bl	__aeabi_uidiv
 263              	.LVL31:
 249:Core/Src/system_stm32l0xx.c ****       }
 264              		.loc 1 249 25 view .LVU71
 265 00ce 024B     		ldr	r3, .L10+4
 266 00d0 1860     		str	r0, [r3]
 267 00d2 ACE7     		b	.L6
 268              	.L11:
ARM GAS  /tmp/ccIB1O8H.s 			page 11


 269              		.align	2
 270              	.L10:
 271 00d4 00100240 		.word	1073876992
 272 00d8 00000000 		.word	SystemCoreClock
 273 00dc 00000000 		.word	AHBPrescTable
 274 00e0 00093D00 		.word	4000000
 275 00e4 0024F400 		.word	16000000
 276 00e8 00127A00 		.word	8000000
 277 00ec 00000000 		.word	PLLMulTable
 278              		.cfi_endproc
 279              	.LFE41:
 281              		.global	PLLMulTable
 282              		.section	.rodata.PLLMulTable,"a"
 283              		.align	2
 286              	PLLMulTable:
 287 0000 03040608 		.ascii	"\003\004\006\010\014\020\030 0"
 287      0C101820 
 287      30
 288              		.global	APBPrescTable
 289              		.section	.rodata.APBPrescTable,"a"
 290              		.align	2
 293              	APBPrescTable:
 294 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 294      01020304 
 295              		.global	AHBPrescTable
 296              		.section	.rodata.AHBPrescTable,"a"
 297              		.align	2
 300              	AHBPrescTable:
 301 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 301      00000000 
 301      01020304 
 301      06
 302 000d 070809   		.ascii	"\007\010\011"
 303              		.global	SystemCoreClock
 304              		.section	.data.SystemCoreClock,"aw"
 305              		.align	2
 308              	SystemCoreClock:
 309 0000 00002000 		.word	2097152
 310              		.text
 311              	.Letext0:
 312              		.file 2 "/usr/share/arm-gnu-toolchain-13.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machine
 313              		.file 3 "/usr/share/arm-gnu-toolchain-13.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_st
 314              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 315              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l031xx.h"
ARM GAS  /tmp/ccIB1O8H.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32l0xx.c
     /tmp/ccIB1O8H.s:19     .text.SystemInit:00000000 $t
     /tmp/ccIB1O8H.s:25     .text.SystemInit:00000000 SystemInit
     /tmp/ccIB1O8H.s:40     .text.SystemCoreClockUpdate:00000000 $t
     /tmp/ccIB1O8H.s:46     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/ccIB1O8H.s:271    .text.SystemCoreClockUpdate:000000d4 $d
     /tmp/ccIB1O8H.s:308    .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/ccIB1O8H.s:300    .rodata.AHBPrescTable:00000000 AHBPrescTable
     /tmp/ccIB1O8H.s:286    .rodata.PLLMulTable:00000000 PLLMulTable
     /tmp/ccIB1O8H.s:283    .rodata.PLLMulTable:00000000 $d
     /tmp/ccIB1O8H.s:293    .rodata.APBPrescTable:00000000 APBPrescTable
     /tmp/ccIB1O8H.s:290    .rodata.APBPrescTable:00000000 $d
     /tmp/ccIB1O8H.s:297    .rodata.AHBPrescTable:00000000 $d
     /tmp/ccIB1O8H.s:305    .data.SystemCoreClock:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
